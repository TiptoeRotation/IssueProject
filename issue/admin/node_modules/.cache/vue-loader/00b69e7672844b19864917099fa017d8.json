{"remainingRequest":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workspace\\IBM7_6_Issue\\issue\\admin\\src\\components\\Login.vue?vue&type=style&index=0&id=ef68022e&scoped=true&lang=css&","dependencies":[{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\src\\components\\Login.vue","mtime":1606265036441},{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5sb2dpbi13cmFwIHsNCiAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgcGFkZGluZy10b3A6IDEwJTsNCn0NCg0KLmxvZ2luLWNvbnRhaW5lciB7DQogIGJvcmRlci1yYWRpdXM6IDEwcHg7DQogIG1hcmdpbjogMHB4IGF1dG87DQogIHdpZHRoOiAzNTBweDsNCiAgcGFkZGluZzogMzBweCA0MHB4IDIwcHggMzVweDsNCiAgYmFja2dyb3VuZDogI2ZmZjsNCiAgYm9yZGVyOiAxcHggc29saWQgI2VhZWFlYTsNCiAgdGV4dC1hbGlnbjogbGVmdDsNCiAgYm94LXNoYWRvdzogMCAwIDIwcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTsNCn0NCg0KLnRpdGxlIHsNCiAgbWFyZ2luOiAwcHggYXV0byA0MHB4IGF1dG87DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgY29sb3I6ICM1MDU0NTg7DQp9DQouZm9vdGVyew0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiAyMDBweDsNCn0NCi5sb2dpbmVycm9yLC51c2Vybm9leGl0ew0KICBjb2xvcjogcmVkOw0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIGRpc3BsYXk6IG5vbmU7DQogIGZvbnQtc2l6ZTogMTRweDsNCn0NCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkNA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"login-wrap\">\r\n    <el-form\r\n      :model=\"ruleForm\"\r\n      label-width=\"100px\"\r\n      status-icon\r\n      :rules=\"rules\"\r\n      ref=\"ruleForm\"\r\n      class=\"demo-ruleForm login-container\"\r\n    >\r\n      <!-- 这有个样式需要写 -->\r\n      <h3 style=\"text-align: center\">欢迎来到Issue管理系统</h3>\r\n      <el-form-item label=\"登录ID\" prop=\"Username\">\r\n        <el-input v-model=\"ruleForm.Username\" placeholder=\"\"></el-input>\r\n      </el-form-item>\r\n      <!-- required 必填 ，max限制长度等等，规则写在rules里面 ，写在input部分无效,和表单的对应prop-->\r\n\r\n      <el-form-item label=\"输入密码\" prop=\"Passwd\">\r\n        <el-input\r\n          type=\"password\"\r\n          v-model=\"ruleForm.Passwd\"\r\n          autocomplete=\"off\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <!-- autocomplete 关闭 ，关闭自动完成功能 -->\r\n      <div class=\"loginerror\">登录名或登录密码不正确</div>\r\n      <div class=\"usernoexit\">用户不存在</div>\r\n      <el-form-item>\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <div class=\"grid-content bg-purple-dark\">\r\n              <el-button\r\n                type=\"primary\"\r\n                style=\"width: 60%\"\r\n                @click=\"doLogin('ruleForm')\"\r\n                >登录</el-button\r\n              >\r\n              <!--  这有个内联的样式 -->\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <div class=\"grid-content bg-purple-dark\">\r\n              <el-button\r\n                type=\"primary\"\r\n                style=\"width: 60%\"\r\n                @click=\"resetForm('ruleForm')\"\r\n                >重置</el-button\r\n              >\r\n              <!--  这有个内联的样式 -->\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <div class=\"grid-content bg-purple-dark\">\r\n              <el-link type=\"success\" @click=\"toRegister\">用户注册</el-link>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form-item>\r\n    </el-form>\r\n    <div class=\"footer\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n// import Register from \"./Register\";   // 注册页面 ，调用另一个组建，已经遗弃，还是加个路径比较好\r\nexport default {\r\n  routes:[{name:'HomePage',path:'/HomePage'}],\r\n  //单页面中不支持前面的data:{}方式\r\n  data() {\r\n    var validateUser = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入ID'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n    return {\r\n      //之前是在里面直接写username，password等等，但是这里要写return\r\n      //因为一个组件不管要不要被其他组件用，只要这样定义了，它就会认为可能这个组件会在其他的组件中使用\r\n      //比如说在这里定义了一个变量，然后把这个组件引入到A组件中，A组件中修改了这个变量\r\n      //同时这个组件也在B组件中引用了，这时候A里面一修改，B里面也变了，它们用的是一个值\r\n      //可是一般来说可能希望在不同的组件中引用的时候，使用不同的值，所以这里要用return\r\n      //这样在A组件和B组件分别引用这个变量的时候是不会互相影响的\r\n      ruleForm: {\r\n        Username: \"\",\r\n        Passwd: \"\",\r\n        flag:'',\r\n        // Username:'admin',\r\n        // Passwd:'123',\r\n        //为了测试登录方便，可以直接在这里写好用户名和密码的值\r\n      },\r\n      // RegisterShow:false\r\n\r\n      rules: {\r\n        // rules 是elementui 中表单组件的，和prop一起对应\r\n        Username: [\r\n          { validator: validateUser, trigger: 'blur',},\r\n          { required: true, message: \"登录ID不能为空\" },\r\n          { max: 30, message: \"长度不能超过30位\" , trigger: 'change',},\r\n        ],\r\n        Passwd: [\r\n          { trigger: \"blur\", required: true, message: \"密码不能为空\" },\r\n          { max: 30, message: \"长度不能超过30位\",trigger: \"change\", },\r\n          {min: 8,message: \"长度不能少于8位\",trigger: \"blur\", },\r\n          // {\r\n          //   pattern: /^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?\\d)(?=.*?[!#@*&.])[a-zA-Z\\d!#@*&.]*$/,\r\n          //   message: \"请输入含大小写，数字和字符的密码\",\r\n          //   trigger: \"blur\",\r\n          // },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    doLogin(formName) {\r\n      //一点击登录按钮，这个方法就会执行  ，方法都要放在这个methods里面\r\n      this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            // 在这里写登录成功之后的操作\r\n            // alert('submit!');  // 成功提交要进行的操作，目前alert测试下\r\n        let formName = this.ruleForm\r\n        axios.post('http://192.168.0.70:9090/Login',{\r\n            username:formName.Username,\r\n            passwd:formName.Passwd\r\n          \r\n        }).then(ret=>{\r\n            this.ruleForm.flag=ret.data,\r\n            console.log(this.ruleForm.flag)    \r\n        //     if(this.ruleForm.flag ==\"login success\"){\r\n        //   var storage = window.sessionStorage;  \r\n        //   storage.setItem('loginName', formName.Username);\r\n        //   //  this.$router.push({name:'HomePage',params:{loginName:formName.Username}})\r\n        //   this.$router.push(\"/homepage\");\r\n        // } \r\n         var storage = window.sessionStorage;  \r\n        if(this.ruleForm.flag ==\"200\"){\r\n          \r\n          storage.setItem('loginName', formName.Username);\r\n          //  this.$router.push({name:'HomePage',params:{loginName:formName.Username}})\r\n          this.$router.push(\"/homepage\");\r\n        }\r\n        else if(this.ruleForm.flag ==\"201\"){\r\n          storage.setItem('loginName', formName.Username);\r\n          // redirect: '/homePage/issueReport', // 重定向，\r\n          this.$router.push(\"/homePage/issueReport\");\r\n        }\r\n        else if(this.ruleForm.flag ==\"202\"){\r\n          storage.setItem('loginName', formName.Username);\r\n          this.$router.push(\"/homePage/accountManagement\");\r\n        }\r\n        else if(this.ruleForm.flag ==\"404\"){\r\n          // document.getElementsByClassName(\"loginerror\")[0].style.display = \"block\";\r\n          alert(\"404,用户不存在\")\r\n        }\r\n        else if(this.ruleForm.flag ==\"405\"){\r\n          // document.getElementsByClassName(\"usernoexit\")[0].style.display = \"block\";\r\n          alert(\"密码错误\")\r\n        }    \r\n        else if(this.ruleForm.flag ==\"406\"){\r\n          // document.getElementsByClassName(\"usernoexit\")[0].style.display = \"block\";\r\n          alert(\"用户已注销(销毁)\")\r\n        }  \r\n        })\r\n        // 判断flag内容\r\n        //     为login success！登陆成功 跳转主页面!\r\n        //     为passwd error! 密码错误!\r\n        //     为usernmae no exist 提示用户名不存在!\r\n        // console.log(this.ruleForm.flag)\r\n        \r\n          } else {\r\n            console.log('error submit!!');\r\n            document.getElementsByClassName(\"loginerror\")[0].style.display = \"block\";\r\n            return false;\r\n          }\r\n        });\r\n    },\r\n    toRegister() {\r\n      this.$router.push(\"/Register\"); // 路由的方法跳转到注册页面\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields(); // 重置的函数，毕竟清空下，免得一片红,elementui表单的方法\r\n    },\r\n  },\r\n\r\n  //   created() {\r\n  //   axios({\r\n  //     // url: \"/data.json\",\r\n  //     method: \"post\",\r\n  //     data:{}\r\n  //     //  get 或者 post\r\n  //   })\r\n  //     .then(data => {\r\n  //       this.list = data.data;\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(\"error...\", err);\r\n  //     });\r\n  // },\r\n\r\n  components: {\r\n    // 同一路径调用另一个vue才使用\r\n    // Register,\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-wrap {\r\n  box-sizing: border-box;\r\n  padding-top: 10%;\r\n}\r\n\r\n.login-container {\r\n  border-radius: 10px;\r\n  margin: 0px auto;\r\n  width: 350px;\r\n  padding: 30px 40px 20px 35px;\r\n  background: #fff;\r\n  border: 1px solid #eaeaea;\r\n  text-align: left;\r\n  box-shadow: 0 0 20px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  margin: 0px auto 40px auto;\r\n  text-align: center;\r\n  color: #505458;\r\n}\r\n.footer{\r\n  width: 100%;\r\n  height: 200px;\r\n}\r\n.loginerror,.usernoexit{\r\n  color: red;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  display: none;\r\n  font-size: 14px;\r\n}\r\n</style>"]}]}