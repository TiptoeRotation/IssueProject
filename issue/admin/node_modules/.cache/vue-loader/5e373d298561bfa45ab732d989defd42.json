{"remainingRequest":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workspace\\IBM7_6_Issue\\issue\\admin\\src\\components\\Login.vue?vue&type=style&index=0&id=ef68022e&scoped=true&lang=css&","dependencies":[{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\src\\components\\Login.vue","mtime":1605685540924},{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\IBM7_6_Issue\\issue\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmxvZ2luLXdyYXAgew0KICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiAxMDAlOw0KICBwYWRkaW5nLXRvcDogMTAlOw0KDQogIC8qIGJhY2tncm91bmQtY29sb3I6ICMxMTIzNDY7ICovDQogIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7DQogIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciByaWdodDsNCiAgYmFja2dyb3VuZC1zaXplOiAxMDAlOw0KfQ0KDQoubG9naW4tY29udGFpbmVyIHsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCiAgbWFyZ2luOiAwcHggYXV0bzsNCiAgd2lkdGg6IDM1MHB4Ow0KICBwYWRkaW5nOiAzMHB4IDQwcHggMjBweCAzNXB4Ow0KICBiYWNrZ3JvdW5kOiAjZmZmOw0KICBib3JkZXI6IDFweCBzb2xpZCAjZWFlYWVhOw0KICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICBib3gtc2hhZG93OiAwIDAgMjBweCAycHggcmdiYSgwLCAwLCAwLCAwLjEpOw0KfQ0KDQoudGl0bGUgew0KICBtYXJnaW46IDBweCBhdXRvIDQwcHggYXV0bzsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBjb2xvcjogIzUwNTQ1ODsNCn0NCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"login-wrap\">\r\n    <el-form\r\n      :model=\"ruleForm\"\r\n      label-width=\"100px\"\r\n      status-icon\r\n      :rules=\"rules\"\r\n      ref=\"ruleForm\"\r\n      class=\"demo-ruleForm login-container\"\r\n    >\r\n      <!-- 这有个样式需要写 -->\r\n      <h3 style=\"text-align: center\">欢迎来到Issue管理系统</h3>\r\n      <el-form-item label=\"登录ID\" prop=\"Username\">\r\n        <el-input v-model=\"ruleForm.Username\" placeholder=\"\"></el-input>\r\n      </el-form-item>\r\n      <!-- required 必填 ，max限制长度等等，规则写在rules里面 ，写在input部分无效,和表单的对应prop-->\r\n\r\n      <el-form-item label=\"输入密码\" prop=\"Passwd\">\r\n        <el-input\r\n          type=\"password\"\r\n          v-model=\"ruleForm.Passwd\"\r\n          autocomplete=\"off\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <!-- autocomplete 关闭 ，关闭自动完成功能 -->\r\n\r\n      <el-form-item>\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <div class=\"grid-content bg-purple-dark\">\r\n              <el-button\r\n                type=\"primary\"\r\n                style=\"width: 60%\"\r\n                @click=\"doLogin('ruleForm')\"\r\n                >登录</el-button\r\n              >\r\n              <!--  这有个内联的样式 -->\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <div class=\"grid-content bg-purple-dark\">\r\n              <el-button\r\n                type=\"primary\"\r\n                style=\"width: 60%\"\r\n                @click=\"resetForm('ruleForm')\"\r\n                >重置</el-button\r\n              >\r\n              <!--  这有个内联的样式 -->\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <div class=\"grid-content bg-purple-dark\">\r\n              <el-link type=\"success\" @click=\"toRegister\">用户注册</el-link>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n<script>\r\n// import axios from \"axios\";\r\n// import Register from \"./Register\";   // 注册页面 ，调用另一个组建，已经遗弃，还是加个路径比较好\r\nexport default {\r\n  //单页面中不支持前面的data:{}方式\r\n  data() {\r\n    return {\r\n      //之前是在里面直接写username，password等等，但是这里要写return\r\n      //因为一个组件不管要不要被其他组件用，只要这样定义了，它就会认为可能这个组件会在其他的组件中使用\r\n      //比如说在这里定义了一个变量，然后把这个组件引入到A组件中，A组件中修改了这个变量\r\n      //同时这个组件也在B组件中引用了，这时候A里面一修改，B里面也变了，它们用的是一个值\r\n      //可是一般来说可能希望在不同的组件中引用的时候，使用不同的值，所以这里要用return\r\n      //这样在A组件和B组件分别引用这个变量的时候是不会互相影响的\r\n      ruleForm: {\r\n        Username: \"\",\r\n        Passwd: \"\",\r\n        // Username:'admin',\r\n        // Passwd:'123',\r\n        //为了测试登录方便，可以直接在这里写好用户名和密码的值\r\n      },\r\n      // RegisterShow:false\r\n\r\n      rules: {\r\n        // rules 是elementui 中表单组件的，和prop一起对应\r\n        Username: [\r\n          { required: true, message: \"登录ID不能为空\" },\r\n          { max: 30, message: \"长度不能超过30位\" },\r\n        ],\r\n        Passwd: [\r\n          { trigger: \"blur\", required: true, message: \"密码不能为空\" },\r\n          { max: 30, message: \"长度不能超过30位\" },\r\n          // {min: 8,message: \"长度不能少于8位\" },\r\n          {\r\n            pattern: /^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?\\d)(?=.*?[!#@*&.])[a-zA-Z\\d!#@*&.]*$/,\r\n            message: \"请输入含大小写，数字和字符的密码\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    doLogin() {\r\n      //一点击登录按钮，这个方法就会执行  ，方法都要放在这个methods里面\r\n      alert(JSON.stringify(this.ruleForm)); //可以直接把this.ruleForm对象传给后端进行校验用户名和密码\r\n      // JSON.stringify() 方法用于将 JavaScript 值转换为 JSON 字符串\r\n    },\r\n    toRegister() {\r\n      this.$router.push(\"/Register\"); // 路由的方法跳转到注册页面\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields(); // 重置的函数，毕竟清空下，免得一片红,elementui表单的方法\r\n    },\r\n  },\r\n\r\n  //   created() {\r\n  //   axios({\r\n  //     // url: \"/data.json\",\r\n  //     method: \"post\",\r\n  //     data:{}\r\n  //     //  get 或者 post\r\n  //   })\r\n  //     .then(data => {\r\n  //       this.list = data.data;\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(\"error...\", err);\r\n  //     });\r\n  // },\r\n\r\n  components: {\r\n    // 同一路径调用另一个vue才使用\r\n    // Register,\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-wrap {\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-top: 10%;\r\n\r\n  /* background-color: #112346; */\r\n  background-repeat: no-repeat;\r\n  background-position: center right;\r\n  background-size: 100%;\r\n}\r\n\r\n.login-container {\r\n  border-radius: 10px;\r\n  margin: 0px auto;\r\n  width: 350px;\r\n  padding: 30px 40px 20px 35px;\r\n  background: #fff;\r\n  border: 1px solid #eaeaea;\r\n  text-align: left;\r\n  box-shadow: 0 0 20px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  margin: 0px auto 40px auto;\r\n  text-align: center;\r\n  color: #505458;\r\n}\r\n</style>"]}]}